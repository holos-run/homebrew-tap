# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Holos < Formula
  desc "Holos CLI"
  homepage "https://holos.run"
  version "0.105.1"

  depends_on "helm" => :optional
  depends_on "kubectl" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/holos-run/holos/releases/download/v0.105.1/holos_Darwin_x86_64.tar.gz"
      sha256 "e9a16720496d9bcc003ed221380820fe2b09c7c0691420bed88206d821dbc443"

      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/holos-run/holos/releases/download/v0.105.1/holos_Darwin_arm64.tar.gz"
      sha256 "1623ae289e816986ab369b1a31e48026b896c490ae420a2844231ef0a42b3127"

      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://github.com/holos-run/holos/releases/download/v0.105.1/holos_Linux_x86_64.tar.gz"
      sha256 "22ab4ba34113dac1bc1d2c43857e78c7a635a65dfb5f0982cee8eaeb2ecd40f4"
      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/holos-run/holos/releases/download/v0.105.1/holos_Linux_arm64.tar.gz"
      sha256 "b5ac38a505c3c91e21334e931d9c6d43379ed4d2bb8a342596eeecabe9647af8"
      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
  end

  test do
    system "#{bin}/holos --version"
  end
end
