# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Holos < Formula
  desc "Holos CLI"
  homepage "https://holos.run"
  version "0.101.2"

  depends_on "helm" => :optional
  depends_on "kubectl" => :optional

  on_macos do
    on_intel do
      url "https://github.com/holos-run/holos/releases/download/v0.101.2/holos_Darwin_x86_64.tar.gz"
      sha256 "e1129223fbbb7ae89d9640ac98b1b71583d16e00de53e337c101cb5e52bf774f"

      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
    on_arm do
      url "https://github.com/holos-run/holos/releases/download/v0.101.2/holos_Darwin_arm64.tar.gz"
      sha256 "6b443c49e97b9c43638398492f6acbe18c71e961fb6ca4ce968cb6ce97cf7db6"

      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/holos-run/holos/releases/download/v0.101.2/holos_Linux_x86_64.tar.gz"
        sha256 "ba7d2ea54b3fbb8a8050e6dc7fae6134135c53818c3e8ab731f7dec3cf34007d"

        def install
          bin.install "holos"
          bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
          (bash_completion/"holos").write bash_output
          zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
          (zsh_completion/"_holos").write zsh_output
          fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
          (fish_completion/"holos.fish").write fish_output
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/holos-run/holos/releases/download/v0.101.2/holos_Linux_arm64.tar.gz"
        sha256 "a903cb73a6a0f06645da449290ccca38e4ac99ff7e51bd9814628cc3aef6559f"

        def install
          bin.install "holos"
          bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
          (bash_completion/"holos").write bash_output
          zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
          (zsh_completion/"_holos").write zsh_output
          fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
          (fish_completion/"holos.fish").write fish_output
        end
      end
    end
  end

  test do
    system "#{bin}/holos --version"
  end
end
