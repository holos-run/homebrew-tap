# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Holos < Formula
  desc "Holos CLI"
  homepage "https://holos.run"
  version "0.105.0"

  depends_on "helm" => :optional
  depends_on "kubectl" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/holos-run/holos/releases/download/v0.105.0/holos_Darwin_x86_64.tar.gz"
      sha256 "9ea2c3da151418fdae225b2e5f90c84bd91c40e0cf17898deffd9ed234a5ae8b"

      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/holos-run/holos/releases/download/v0.105.0/holos_Darwin_arm64.tar.gz"
      sha256 "6a7d3d59ea05a516925108ee0e6d46774494d295e567ef4cb90b2709213db4e8"

      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://github.com/holos-run/holos/releases/download/v0.105.0/holos_Linux_x86_64.tar.gz"
      sha256 "426877cb243e60a8123b3a26b1fac12da3fb8fb8a05f4c482f2bb70f68049485"
      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/holos-run/holos/releases/download/v0.105.0/holos_Linux_arm64.tar.gz"
      sha256 "cc12cb14aa439e68b9445d99bd80b228e4680da26e6eba86521c6373dd10741e"
      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
  end

  test do
    system "#{bin}/holos --version"
  end
end
