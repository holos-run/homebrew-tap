# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Holos < Formula
  desc "Holos CLI"
  homepage "https://holos.run"
  version "0.102.5"

  depends_on "helm" => :optional
  depends_on "kubectl" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/holos-run/holos/releases/download/v0.102.5/holos_Darwin_x86_64.tar.gz"
      sha256 "3cabee96f5f43c645e3b8c4dcdafae872484ad2aede06e083485eaae7a9f6120"

      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/holos-run/holos/releases/download/v0.102.5/holos_Darwin_arm64.tar.gz"
      sha256 "c7eda6dd276d6f67189d773664dc1c31f9f28e1187bd9146307ea646d1e6f652"

      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/holos-run/holos/releases/download/v0.102.5/holos_Linux_x86_64.tar.gz"
        sha256 "0e53b9081c2056d0d8d80a0fa779bc54645cd9345196f8b82098f3af89be8e07"

        def install
          bin.install "holos"
          bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
          (bash_completion/"holos").write bash_output
          zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
          (zsh_completion/"_holos").write zsh_output
          fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
          (fish_completion/"holos.fish").write fish_output
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/holos-run/holos/releases/download/v0.102.5/holos_Linux_arm64.tar.gz"
        sha256 "18f7785412b17b64ec59f411d0ee45b8f521239658419360ead89934df065050"

        def install
          bin.install "holos"
          bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
          (bash_completion/"holos").write bash_output
          zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
          (zsh_completion/"_holos").write zsh_output
          fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
          (fish_completion/"holos.fish").write fish_output
        end
      end
    end
  end

  test do
    system "#{bin}/holos --version"
  end
end
