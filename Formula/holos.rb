# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Holos < Formula
  desc "Holos CLI"
  homepage "https://holos.run"
  version "0.101.7"

  depends_on "helm" => :optional
  depends_on "kubectl" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/holos-run/holos/releases/download/v0.101.7/holos_Darwin_x86_64.tar.gz"
      sha256 "bcdb1d0a7bcab71d2d6394d83c20e8eaaf616c9e95f5531fd556aa02dde4d480"

      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/holos-run/holos/releases/download/v0.101.7/holos_Darwin_arm64.tar.gz"
      sha256 "d2686a521592fe716c6572ed7a36582ee1cd68227eb35593985e4b3a4219b9cf"

      def install
        bin.install "holos"
        bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
        (bash_completion/"holos").write bash_output
        zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
        (zsh_completion/"_holos").write zsh_output
        fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
        (fish_completion/"holos.fish").write fish_output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/holos-run/holos/releases/download/v0.101.7/holos_Linux_x86_64.tar.gz"
        sha256 "bccd434ba501c8c4136d75c47fd78d93c32a6cf2c0b54b9710c40c8da5e48bc7"

        def install
          bin.install "holos"
          bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
          (bash_completion/"holos").write bash_output
          zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
          (zsh_completion/"_holos").write zsh_output
          fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
          (fish_completion/"holos.fish").write fish_output
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/holos-run/holos/releases/download/v0.101.7/holos_Linux_arm64.tar.gz"
        sha256 "4118c18ba59b4d3ba4ec9e419814093600e3a90e926d0efee5f530519bdfca1c"

        def install
          bin.install "holos"
          bash_output = Utils.safe_popen_read(bin/"holos", "completion", "bash")
          (bash_completion/"holos").write bash_output
          zsh_output = Utils.safe_popen_read(bin/"holos", "completion", "zsh")
          (zsh_completion/"_holos").write zsh_output
          fish_output = Utils.safe_popen_read(bin/"holos", "completion", "fish")
          (fish_completion/"holos.fish").write fish_output
        end
      end
    end
  end

  test do
    system "#{bin}/holos --version"
  end
end
